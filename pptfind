#!/bin/sh
#extended recursive search for documents - presentations (ppt, pptx, odp) 
#web: http://safrm.net/projects/efind
#author: Miroslav Safr <miroslav.safr@gmail.com>
VERSION=NA                                                                   
VERSION_DATE=NA
BASENAME=`basename $0`
usage() {
    echo "$BASENAME ${VERSION} - extended recursive search for presentations (ppt, pptx, odp)"
    echo " http://safrm,net/projects/efind"
    echo "Usage: $BASENAME [OPTIONS]... PATTERN [SEARCHING_DIR]"
    echo " PATTERN ............................ string (requires \"\" if contains spaces) "
    echo " options: "
    echo " --help ............................. shows command line help"
    echo " -cs ................................ case sensitive content search (by default it is insensitive)"
    echo " -nf --no-filenames ................. disable searching in filenames (by default enabled)"
    echo " -nc --no-content ................... disable searching in file content (by default enabled)"
    echo " "
}
START_TIME=`date +'%s'`
CASE_SENS=0
TOTAL_COUNT=0
FOUND_COUNT=0
FOUND_COUNT_FN=0
SEARCH_FILENAMES=1
SEARCH_CONTENT=1
while [ $# -gt 0 ]; do
  case "$1" in
    --help) usage exit ;;
    -cs) CASE_SENS=1 ;;
    -nf | --no-filenames )  SEARCH_FILENAMES=0 ;;
    -nc | --no-content )  SEARCH_CONTENT=0 ;;
    * )      
        if [ -z "$WHAT" ]; then  
            WHAT=$1 ; 
        elif [ -z "$SEARCH_DIR" ]; then
            SEARCH_DIR=$1 ;
        else
            echo "There can be only 2 arguments without <WHAT> <WHERE>, exiting.."; exit 1;        
        fi 
        ;;
  esac
  shift
done

if [ -z "$WHAT" ]; then 
    echo "You have to specify searching pattern, exiting.."; exit 1;
fi

if [ -z "$SEARCH_DIR" ] || [ ! -d "$SEARCH_DIR" ]; then
	SEARCH_DIR="./"
fi

#check dependencies
if [ ! -e "/usr/bin/unoconv" ] 
then 
    echo "Not installed unoconv, exiting.."; 
    exit 1; 
fi

#check if terminal supports colors 
COLORS=
if [ -x /usr/bin/tput ] && tput setaf > /dev/null; then
    COLORS=" --color=always ";
fi
#case sensitive flag - by default ignore cases
CSF="-i "
if [ $CASE_SENS -eq 1 ]; then
    CSF="" 
fi

FILES=$(find $SEARCH_DIR -type f -not -wholename "*\/.git*" -printf '%p\n' | grep -i -E -Z '\.(ppt|odp|pptx)$')
FILES_COUNT=`echo "$FILES" | grep -v '^$' | wc -l `
echo "searching '\033[32m$WHAT\033[0m' in \033[34m$SEARCH_DIR\033[0m \033[46m$FILES_COUNT ppt,pptx,odp\033[0m files, CS:$CASE_SENS FS:$SEARCH_FILENAMES "

#filenames search
FIFO=/tmp/FOUND_COUNT_FN.$$
trap 'rm -f $FIFO' 0
mkfifo $FIFO
if [ $SEARCH_FILENAMES -eq 1 ]; then
echo "${FILES}" | \
{ while IFS='\n' read -r FILE ; do
	# only file basename
	RESULT=`echo "$FILE" |   sed 's|.*/||g' | grep $COLORS $CSF -E "$WHAT"`
    if [ "$RESULT" != "" ] 
    then
      echo "\033[34m$FILE\033[0m: $RESULT";
     FOUND_COUNT_FN=$(($FOUND_COUNT_FN + 1)) ;
    fi
  done
  echo "$FOUND_COUNT_FN" > $FIFO &
}

#pass the value back to script
read FOUND_COUNT_FN < $FIFO
wait $!
fi


#content search
if [ $SEARCH_CONTENT -eq 1 ]; then
echo "${FILES}" | \
{ while IFS='\n' read -r FILE ; do
    if [ ! -z `echo "$FILE" | grep -i -q '.pptx\$'` ]; then
        #unpack to xml | remove tags | clean empty lines
        RESULT=`unzip -p $FILE | sed -e 's/<[^>]*>//g' | sed '/^\s*$/d' |  grep $COLORS $CSF -E "$WHAT"`
    else
        RESULT=`unoconv  -f xhtml --stdout "$FILE"  2> /dev/null | html2text |  grep $COLORS $CSF -E "$WHAT"`
    fi
    if [ "$RESULT" != "" ] 
    then
      echo "\033[34m$FILE\033[0m: $RESULT";
      FOUND_COUNT=$(($FOUND_COUNT + 1)) ;
    fi
  done

  ELAPSED_TIME=$((`date +'%s'` - $START_TIME))
  echo "$BASENAME found \033[42m$FOUND_COUNT from $FILES_COUNT \033[0m files, took:$(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) s"
}
fi

